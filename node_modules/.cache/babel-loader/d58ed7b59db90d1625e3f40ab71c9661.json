{"ast":null,"code":"var _jsxFileName = \"/Users/hbin/Desktop/react/reactActual/admin/src/Pages/echart.js\";\nimport React, { Component, useEffect } from 'react'; // 引入 ECharts 主模块\n\nimport Echarts from 'echarts/lib/echarts'; // 引入柱状图\n\nimport 'echarts/lib/chart/bar'; //引入折线图\n\nimport 'echarts/lib/chart/line'; // 引入提示框和标题组件\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/toolbox';\n\nfunction echart() {\n  const initChart = () => {\n    let element = document.getElementById('main');\n    let myChart = Echarts.init(element);\n    let option = {\n      title: {\n        text: '折线图堆叠'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      legend: {\n        data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n      },\n      toolbox: {\n        feature: {\n          saveAsImage: {}\n        }\n      },\n      xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '邮件营销',\n        type: 'line',\n        stack: '总量',\n        data: [120, 132, 101, 134, 90, 230, 210]\n      }, {\n        name: '联盟广告',\n        type: 'line',\n        stack: '总量',\n        data: [220, 182, 191, 234, 290, 330, 310]\n      }, {\n        name: '视频广告',\n        type: 'line',\n        stack: '总量',\n        data: [150, 232, 201, 154, 190, 330, 410]\n      }, {\n        name: '直接访问',\n        type: 'line',\n        stack: '总量',\n        data: [320, 332, 301, 334, 390, 330, 320]\n      }, {\n        name: '搜索引擎',\n        type: 'line',\n        stack: '总量',\n        data: [820, 932, 901, 934, 1290, 1330, 1320]\n      }]\n    };\n    myChart.setOption(option);\n  };\n\n  function init() {\n    initChart();\n  }\n\n  useEffect(() => {\n    init();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: 'main',\n    style: {\n      width: 1000,\n      height: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n} // class echart extends Component{\n//     componentDidMount(){\n//         // 基于准备好的dom，初始化echarts实例\n//         var myChart = echarts.init(document.getElementById('main'));\n//         // 绘制图表\n//         myChart.setOption({\n//             title: {\n//                 text: '折线图堆叠'\n//             },\n//             tooltip: {\n//                 trigger: 'axis'\n//             },\n//             legend: {\n//                 data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\n//             },\n//             grid: {\n//                 left: '3%',\n//                 right: '4%',\n//                 bottom: '3%',\n//                 containLabel: true\n//             },\n//             toolbox: {\n//                 feature: {\n//                     saveAsImage: {}\n//                 }\n//             },\n//             xAxis: {\n//                 type: 'category',\n//                 boundaryGap: false,\n//                 data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n//             },\n//             yAxis: {\n//                 type: 'value'\n//             },\n//             series: [\n//                 {\n//                     name: '邮件营销',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [120, 132, 101, 134, 90, 230, 210]\n//                 },\n//                 {\n//                     name: '联盟广告',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [220, 182, 191, 234, 290, 330, 310]\n//                 },\n//                 {\n//                     name: '视频广告',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [150, 232, 201, 154, 190, 330, 410]\n//                 },\n//                 {\n//                     name: '直接访问',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [320, 332, 301, 334, 390, 330, 320]\n//                 },\n//                 {\n//                     name: '搜索引擎',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [820, 932, 901, 934, 1290, 1330, 1320]\n//                 }\n//             ]\n//         }\n//         );\n//     }\n//     render(){\n//         return (\n//             <div>\n//                  <div id=\"main\" style={{ width: 1000, height: 500 }}></div>\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default echart;","map":{"version":3,"sources":["/Users/hbin/Desktop/react/reactActual/admin/src/Pages/echart.js"],"names":["React","Component","useEffect","Echarts","echart","initChart","element","document","getElementById","myChart","init","option","title","text","tooltip","trigger","legend","data","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","name","stack","setOption","width","height"],"mappings":"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","sourcesContent":["import React, { Component , useEffect } from 'react';\n// 引入 ECharts 主模块\nimport Echarts from 'echarts/lib/echarts';\n// 引入柱状图\nimport  'echarts/lib/chart/bar';\n//引入折线图\nimport 'echarts/lib/chart/line';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/toolbox'\n\n\nfunction echart(){\n    const initChart = ()=>{\n        let element = document.getElementById('main');\n        let myChart = Echarts.init(element );\n        let option = {\n            title: {\n                text: '折线图堆叠'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            legend: {\n                data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                containLabel: true\n            },\n            toolbox: {\n                feature: {\n                    saveAsImage: {}\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '邮件营销',\n                    type: 'line',\n                    stack: '总量',\n                    data: [120, 132, 101, 134, 90, 230, 210]\n                },\n                {\n                    name: '联盟广告',\n                    type: 'line',\n                    stack: '总量',\n                    data: [220, 182, 191, 234, 290, 330, 310]\n                },\n                {\n                    name: '视频广告',\n                    type: 'line',\n                    stack: '总量',\n                    data: [150, 232, 201, 154, 190, 330, 410]\n                },\n                {\n                    name: '直接访问',\n                    type: 'line',\n                    stack: '总量',\n                    data: [320, 332, 301, 334, 390, 330, 320]\n                },\n                {\n                    name: '搜索引擎',\n                    type: 'line',\n                    stack: '总量',\n                    data: [820, 932, 901, 934, 1290, 1330, 1320]\n                }\n            ]\n        };\n        myChart.setOption(option);\n        \n    }\n\n    function init(){\n        initChart()\n    }\n\n    useEffect(()=>{\n        init()\n    },[])\n\n    return (\n        <div>\n            <div id={'main'} style={{ width: 1000, height: 500 }}></div>\n        </div>\n    )\n}\n\n// class echart extends Component{\n//     componentDidMount(){\n//         // 基于准备好的dom，初始化echarts实例\n//         var myChart = echarts.init(document.getElementById('main'));\n//         // 绘制图表\n//         myChart.setOption({\n//             title: {\n//                 text: '折线图堆叠'\n//             },\n//             tooltip: {\n//                 trigger: 'axis'\n//             },\n//             legend: {\n//                 data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\n//             },\n//             grid: {\n//                 left: '3%',\n//                 right: '4%',\n//                 bottom: '3%',\n//                 containLabel: true\n//             },\n//             toolbox: {\n//                 feature: {\n//                     saveAsImage: {}\n//                 }\n//             },\n//             xAxis: {\n//                 type: 'category',\n//                 boundaryGap: false,\n//                 data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n//             },\n//             yAxis: {\n//                 type: 'value'\n//             },\n//             series: [\n//                 {\n//                     name: '邮件营销',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [120, 132, 101, 134, 90, 230, 210]\n//                 },\n//                 {\n//                     name: '联盟广告',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [220, 182, 191, 234, 290, 330, 310]\n//                 },\n//                 {\n//                     name: '视频广告',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [150, 232, 201, 154, 190, 330, 410]\n//                 },\n//                 {\n//                     name: '直接访问',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [320, 332, 301, 334, 390, 330, 320]\n//                 },\n//                 {\n//                     name: '搜索引擎',\n//                     type: 'line',\n//                     stack: '总量',\n//                     data: [820, 932, 901, 934, 1290, 1330, 1320]\n//                 }\n//             ]\n//         }\n//         );\n//     }\n\n//     render(){\n//         return (\n//             <div>\n//                  <div id=\"main\" style={{ width: 1000, height: 500 }}></div>\n//             </div>\n//         )\n//     }\n// }\n\nexport default echart"]},"metadata":{},"sourceType":"module"}